get:
  summary: Paginate {{ model | pluralize }}
  description: Retrieve all {{ model | pluralize }} by ascending ids, paginated.
  parameters:
    - name: page
      in: query
      description: The page **(starts at 0)**.
      schema:
        type: integer
      example: '{{ random_int:0,10 }}'
      required: true
      style: form
    - name: perPage
      in: query
      description: The number of {{ model | pluralize }} per page.
      schema:
        type: integer
      example: 100
      required: true
      style: form
  responses:
    '200':
      description: The {{ model | pluralize }} in a paginated response.
      content:
        application/json:
          schema:
            type: object
            required: [page, per_page, total, data]
            properties:
              page:
                description: The current page.
                type: integer
                example: '{{ random_int:0,10 }}'
                readOnly: true
              per_page:
                description: The number of {{ model | pluralize }} per page.
                type: integer
                example: 100
                readOnly: true
              total:
                description: The total number of {{ model | pluralize }} processed.
                type: integer
                example: '{{ random_int:10,100 }}'
                readOnly: true
              data:
                description: The {{ model | pluralize }} as an array.
                type: array
                items:
                  $ref: '#/components/schemas/{{ model | ucfirst }}'
                readOnly: true
